<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 이 파일의 경로를 config.xml에 명시해야 한다. -->

<!-- 이 XML의 구조대로 구현될 클래스의 이름 -->
<mapper namespace="ProfessorJoinMapper">

	<!-- Beans 클래스의 객체이름(id)과 클래스이름(type)을 명시한다. -->
	<resultMap id="professor_department" type="study.spring.hellospring.model.ProfessorDepartment">
		<!-- Beans의 멤버변수(property)이름과 대상 테이블의 컬럼(column)을 연결한다. -->
		<result property="profno" 	column="profno" />
		<result property="name" 	column="name" />
		<result property="userid" 	column="userid" />
		<result property="position" column="position" />
		<result property="sal" 		column="sal" />
		<result property="hiredate" column="hiredate" />
		<result property="comm" 	column="comm" />
		<result property="deptno" 	column="deptno" />
		<result property="dname" 	column="dname" />
	</resultMap>

	<!-- 교수+학과 테이블을 조인하여 목록조회 -->
	<select id="selectProfessorJoinList" 
		parameterType="study.spring.hellospring.model.ProfessorDepartment"
	 	resultMap="professor_department">
		SELECT  profno, name, userid, position, sal, 
			    DATE_FORMAT(hiredate, '%Y-%m-%d') AS hiredate, 
			    comm, professor.deptno as deptno, department.dname as dname 
		FROM    professor    INNER JOIN department ON professor.deptno=department.deptno
		
		<where>
			<if test="name != null and name != ''">
				name LIKE concat('%', #{name}, '%')
			</if>
		</where>
		
		ORDER   BY profno DESC
		LIMIT #{limitStart}, #{listCount}
	</select>
	
	<!-- 교수+학과 테이블을 조인하여 상세조회 -->
	<select id="selectProfessorJoinItem" 
		parameterType="study.spring.hellospring.model.ProfessorDepartment"
		resultMap="professor_department">
		SELECT  profno, name, userid, position, sal, 
			    DATE_FORMAT(hiredate, '%Y-%m-%d') AS hiredate, 
			    comm, professor.deptno as deptno, department.dname as dname 
		FROM    professor    INNER JOIN department ON professor.deptno=department.deptno
		WHERE   profno=#{profno}
	</select>
	
	<!-- 조인 결과에 대한 전체 데이터 수 얻기 -->
	<select id="selectProfessorCount"
		parameterType="study.spring.hellospring.model.ProfessorDepartment"
		resultType="int">
		SELECT count(profno)
		FROM professor INNER JOIN department ON professor.deptno=department.deptno
		<where>
			<if test="name != null and name != ''">
				name LIKE concat('%', #{name}, '%')
			</if>
		</where>
	</select>
</mapper>


